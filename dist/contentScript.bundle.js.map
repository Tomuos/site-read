{"version":3,"file":"contentScript.bundle.js","mappings":"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","sources":["webpack://site-read/./src/app/extension/lib/cleanText/cleanText.js","webpack://site-read/./src/app/extension/lib/keepSpacing/keepSpacing.js","webpack://site-read/./src/app/extension/lib/processWord/processWord.js","webpack://site-read/./src/app/extension/lib/removeExtraWhitespace/splitSpaces.js","webpack://site-read/./src/app/extension/lib/spacedElementsList/spacedElementsList.js","webpack://site-read/./src/app/extension/lib/spacingAroundElement/spacingAroundElement.js","webpack://site-read/./src/app/extension/lib/styledSpan/styledSpan.js","webpack://site-read/webpack/bootstrap","webpack://site-read/./src/app/extension/contentScript.js"],"sourcesContent":["function cleanText (text) {\r\nreturn text.replace(/\\s+/g, ' ').trim();\r\n}\r\n\r\nmodule.exports = cleanText;","function keepSpacing(word) {\r\n       return word.replace(/[^\\w\\s.,!?'\"\":“”‘’–-]/g, '');\r\n}\r\n\r\nmodule.exports = keepSpacing;","const keepSpacing = require('../keepSpacing/keepSpacing')\r\n\r\nfunction processWord(word) {\r\n\r\n    \r\n\r\n    const cleanWord = keepSpacing(word); \r\n    \r\n    if (cleanWord.length === 1) {\r\n        return `<strong>${word}</strong>`\r\n    }\r\n    else if (cleanWord.length === 2 ){\r\n        return `<strong>${word.charAt(0)}</strong>${word.charAt(1)}`;\r\n    }\r\n    else if (cleanWord.length === 3){\r\n        return `<strong>${word.substring(0, 2)}</strong>${word.charAt(2)}`\r\n    }\r\n    else if (cleanWord.length > 3){\r\n        const boldMath = Math.ceil(cleanWord.length / 2);\r\n        return `<strong>${word.substring(0, boldMath)}</strong>${word.substring(boldMath)}`\r\n    }\r\n    \r\n    return word;\r\n\r\n}\r\n\r\nmodule.exports = processWord;","// const words = text.split(/(\\s+)/); \r\n\r\nfunction splitSpaces(text) {\r\n  return text.split(/(\\s+)/);\r\n}\r\n\r\nmodule.exports = splitSpaces;","const spacingAroundElement = require('../spacingAroundElement/spacingAroundElement')\r\n\r\nfunction spacingElementsList(root){\r\n    const anchorElement = root.querySelectorAll('a');\r\n    const italicElement = root.querySelectorAll('em');\r\n    // const strongElement = root.querySelectorAll('strong');\r\n    const spanElement = root.querySelectorAll('span');\r\n\r\n\r\n    anchorElement.forEach(element => spacingAroundElement(element));\r\n    italicElement.forEach(element => spacingAroundElement(element));\r\n    // strongElement.forEach(element => spacingAroundElement(element));\r\n    spanElement.forEach(element => spacingAroundElement(element));\r\n\r\n}\r\n\r\nmodule.exports = spacingElementsList;","function spacingAroundElement(element) {\r\n  const prevSibling = element.previousSibling;\r\n  const nextSibling = element.nextSibling;\r\n\r\n  // Ensure space before the element\r\n  if (!prevSibling || prevSibling.nodeType !== Node.TEXT_NODE) {\r\n    element.parentNode.insertBefore(document.createTextNode(' '), element);\r\n  } else if (!prevSibling.nodeValue.endsWith(' ')) {\r\n    prevSibling.nodeValue += ' ';\r\n  }\r\n\r\n  // Ensure space after the element\r\n  if (!nextSibling || nextSibling.nodeType !== Node.TEXT_NODE) {\r\n    element.parentNode.insertBefore(document.createTextNode(' '), nextSibling);\r\n  } else if (!nextSibling.nodeValue.startsWith(' ')) {\r\n    nextSibling.nodeValue = ' ' + nextSibling.nodeValue;\r\n  }\r\n}\r\n\r\nmodule.exports = spacingAroundElement;\r\n","function styledSpan(innerHTML) {\r\n    const span = document.createElement('span');\r\n    span.style.display = 'inline'; // Inline behavior\r\n    span.style.whiteSpace = 'normal'; // Prevent text overflow\r\n    span.style.fontSize = 'inherit'; // Inherit the font size from parent\r\n    span.style.lineHeight = 'inherit'; // Inherit the line height\r\n    span.innerHTML = innerHTML;\r\n    return span;\r\n  }\r\n  \r\n  module.exports = styledSpan;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// contentScript.js\r\n\r\nconst cleanText = require('./lib/cleanText/cleanText');\r\nconst keepSpacing = require('./lib/keepSpacing/keepSpacing');\r\nconst splitSpaces = require('./lib/removeExtraWhitespace/splitSpaces');\r\nconst processWord = require('./lib/processWord/processWord');\r\nconst spacingElementsList = require('./lib/spacedElementsList/spacedElementsList');\r\nconst styledSpan = require('./lib/styledSpan/styledSpan');\r\n\r\nlet isSiteReadEnabled = false;\r\nlet observer = null;\r\n\r\n// 1) Load initial state from storage\r\nchrome.storage.sync.get(['siteReadEnabled'], (result) => {\r\n  isSiteReadEnabled = result.siteReadEnabled || false;\r\n  if (isSiteReadEnabled) {\r\n    applySiteRead(document.body);\r\n    startMutationObserver();\r\n  }\r\n});\r\n\r\n// 2) Listen for toggle messages from popup\r\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n  if (request.action === 'toggleSiteRead') {\r\n    isSiteReadEnabled = request.state;\r\n    toggleSiteRead();\r\n    sendResponse({ status: 'SiteRead toggled', enabled: isSiteReadEnabled });\r\n  }\r\n});\r\n\r\n// 3) Main function to apply transformations\r\nfunction applySiteRead(root = document.body) {\r\n  if (!isSiteReadEnabled) return;\r\n\r\n  // Query a set of text-containing elements\r\n  const elements = root.querySelectorAll('p, li, a, em, ul, ol, div, span, article, section');\r\n  \r\n  elements.forEach((element) => {\r\n    // If this element was already processed, skip it\r\n    if (element.dataset.bionicProcessed === 'true') {\r\n      return;\r\n    }\r\n\r\n    let didProcess = false;\r\n\r\n    element.childNodes.forEach((node) => {\r\n      if (node.nodeType === Node.TEXT_NODE && node.nodeValue.trim() !== '') {\r\n        didProcess = true;\r\n        const text = cleanText(node.nodeValue);\r\n        const processedText = splitSpaces(text)\r\n          .map(keepSpacing)\r\n          .map(processWord)\r\n          .join('');\r\n        const span = styledSpan(processedText);\r\n\r\n        // Optionally mark the span so we know it's transformed text\r\n        span.dataset.bionicProcessed = 'true';\r\n\r\n        // Replace the original text node\r\n        node.replaceWith(span);\r\n      }\r\n    });\r\n\r\n    // If we processed anything, mark the parent so we don’t do it again\r\n    if (didProcess) {\r\n      element.dataset.bionicProcessed = 'true';\r\n    }\r\n  });\r\n\r\n  // Apply spacing logic\r\n  spacingElementsList(root);\r\n}\r\n\r\n// 4) Toggle function\r\nfunction toggleSiteRead() {\r\n  if (isSiteReadEnabled) {\r\n    applySiteRead(document.body);\r\n    startMutationObserver();\r\n  } else {\r\n    stopMutationObserver();\r\n    location.reload(); // Reload page to reset DOM\r\n  }\r\n}\r\n\r\n// 5) Start the MutationObserver\r\nfunction startMutationObserver() {\r\n  if (observer) return; // don’t start twice\r\n\r\n  observer = new MutationObserver((mutations) => {\r\n    mutations.forEach((mutation) => {\r\n      if (mutation.type === 'childList') {\r\n        mutation.addedNodes.forEach((node) => {\r\n          // If a new node is an element, apply reading to its subtree\r\n          if (node.nodeType === Node.ELEMENT_NODE) {\r\n            applySiteRead(node);\r\n          }\r\n        });\r\n      }\r\n      if (mutation.type === 'characterData') {\r\n        // If text content changes, re-apply to its parent\r\n        const parent = mutation.target.parentNode;\r\n        if (parent) {\r\n          applySiteRead(parent);\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  observer.observe(document.body, {\r\n    childList: true,\r\n    characterData: true,\r\n    subtree: true,\r\n  });\r\n}\r\n\r\n// 6) Stop the MutationObserver\r\nfunction stopMutationObserver() {\r\n  if (observer) {\r\n    observer.disconnect();\r\n    observer = null;\r\n  }\r\n}\r\n"],"names":["module","exports","text","replace","trim","word","keepSpacing","cleanWord","length","charAt","substring","boldMath","Math","ceil","split","spacingAroundElement","root","anchorElement","querySelectorAll","italicElement","spanElement","forEach","element","prevSibling","previousSibling","nextSibling","nodeType","Node","TEXT_NODE","nodeValue","endsWith","parentNode","insertBefore","document","createTextNode","startsWith","innerHTML","span","createElement","style","display","whiteSpace","fontSize","lineHeight","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","cleanText","splitSpaces","processWord","spacingElementsList","styledSpan","isSiteReadEnabled","observer","applySiteRead","body","dataset","bionicProcessed","didProcess","childNodes","node","processedText","map","join","replaceWith","startMutationObserver","MutationObserver","mutations","mutation","type","addedNodes","ELEMENT_NODE","parent","target","observe","childList","characterData","subtree","chrome","storage","sync","get","result","siteReadEnabled","runtime","onMessage","addListener","request","sender","sendResponse","action","state","disconnect","location","reload","status","enabled"],"sourceRoot":""}